diff --git a/ccompiler.py b/ccompiler.py
index e93a273..d58fa9c 100644
--- a/ccompiler.py
+++ b/ccompiler.py
@@ -965,6 +965,8 @@ compiler_class = { 'unix':    ('unixccompiler', 'UnixCCompiler',
                                "Cygwin port of GNU C Compiler for Win32"),
                    'mingw32': ('cygwinccompiler', 'Mingw32CCompiler',
                                "Mingw32 port of GNU C Compiler for Win32"),
+                   'mingw64': ('cygwinccompiler', 'Mingw64CCompiler',
+                               "Mingw64 port of GNU C Compiler for Win64"),
                    'bcpp':    ('bcppcompiler', 'BCPPCompiler',
                                "Borland C++ Compiler"),
                  }
diff --git a/cygwinccompiler.py b/cygwinccompiler.py
index c879646..ece57aa 100644
--- a/cygwinccompiler.py
+++ b/cygwinccompiler.py
@@ -317,6 +317,61 @@ class Mingw32CCompiler(CygwinCCompiler):
         # with MSVC 7.0 or later.
         self.dll_libraries = get_msvcr()
 
+# the same as cygwin plus some additional parameters
+class Mingw64CCompiler(CygwinCCompiler):
+
+    compiler_type = 'mingw64'
+
+    def __init__ (self,
+                  verbose=0,
+                  dry_run=0,
+                  force=0):
+
+        CygwinCCompiler.__init__ (self, verbose, dry_run, force)
+
+        # ld_version >= "2.13" support -shared so use it instead of
+        # -mdll -static
+        if self.ld_version >= "2.13":
+            shared_option = "-shared"
+        else:
+            shared_option = "-mdll -static"
+
+        # A real mingw32 doesn't need to specify a different entry point,
+        # but cygwin 2.91.57 in no-cygwin-mode needs it.
+        if self.gcc_version <= "2.91.57":
+            entry_point = '--entry _DllMain@12'
+        else:
+            entry_point = ''
+
+        if self.gcc_version < '4' or is_cygwingcc():
+            no_cygwin = ' -mno-cygwin'
+        else:
+            no_cygwin = ''
+
+        self.linker_dll='x86_64-w64-mingw32-gcc'
+
+        self.set_executables(compiler='x86_64-w64-mingw32-gcc%s -O -Wall' % no_cygwin,
+                             compiler_so='x86_64-w64-mingw32-gcc%s -mdll -O -Wall -D MS_WIN64' % no_cygwin,
+                             compiler_cxx='x86_64-w64-mingw32-g++%s -O -Wall' % no_cygwin,
+                             linker_exe='x86_64-w64-mingw32-gcc%s' % no_cygwin,
+                             linker_so='%s%s %s %s'
+                                    % (self.linker_dll, no_cygwin,
+                                       shared_option, entry_point))
+        # Maybe we should also append -mthreads, but then the finished
+        # dlls need another dll (mingwm10.dll see Mingw32 docs)
+        # (-mthreads: Support thread-safe exception handling on `Mingw32')
+
+        # no additional libraries needed
+        self.dll_libraries=[]
+
+        # Include the appropriate MSVC runtime library if Python was built
+        # with MSVC 7.0 or later.
+        #self.dll_libraries = get_msvcr()
+
+    # __init__ ()
+
+# class Mingw64CCompiler
+
 # Because these compilers aren't configured in Python's pyconfig.h file by
 # default, we should at least warn the user if he is using an unmodified
 # version.
diff --git a/distutils.cfg b/distutils.cfg
new file mode 100644
index 0000000..96dcf19
--- /dev/null
+++ b/distutils.cfg
@@ -0,0 +1,2 @@
+[build]
+compiler = mingw64
